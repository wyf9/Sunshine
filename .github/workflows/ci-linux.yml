---
name: CI-Linux
permissions:
  contents: read

on:
  workflow_call:
    inputs:
      release_commit:
        required: true
        type: string
      release_version:
        required: true
        type: string
  workflow_dispatch:
  

jobs:
  build_linux:
    name: ${{ matrix.name }}
    env:
      APP_ID: dev.lizardbyte.app.Sunshine
    runs-on: ubuntu-${{ matrix.dist }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: AppImage
            EXTRA_ARGS: '--appimage-build'
            dist: 25.04  # Updated to Ubuntu 25.04
    steps:
      - name: More space
        uses: LizardByte/actions/actions/more_space@v2025.907.21827
        with:
          analyze-space-savings: true
          clean-all: true

      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Setup Dependencies Linux
        timeout-minutes: 5
        run: |
          # Create the artifacts directory
          mkdir -p artifacts

          # Add universe repository for compatibility
          sudo add-apt-repository universe

          # Install dependencies for Ubuntu 25.04
          sudo apt-get update -y
          sudo apt-get install -y \
            libdrm-dev \
            libfuse3-dev \  # Updated to libfuse3 for Ubuntu 25.04
            libgl-dev \
            libwayland-dev \
            libx11-xcb-dev \
            libxcb-dri3-dev \
            libxfixes-dev \
            libva-dev \  # Use system libva instead of building from source
            libgtk-3-dev \
            librsvg2-dev

      - name: Setup python
        id: python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'

      - name: Build Linux
        env:
          BRANCH: ${{ github.head_ref || github.ref_name }}
          BUILD_VERSION: ${{ inputs.release_version }}
          COMMIT: ${{ inputs.release_commit }}
        run: |
          chmod +x ./scripts/linux_build.sh
          echo "::add-matcher::.github/matchers/gcc.json"
          ./scripts/linux_build.sh \
            --publisher-name='${{ github.repository_owner }}' \
            --publisher-website='https://app.lizardbyte.dev' \
            --publisher-issue-url='https://app.lizardbyte.dev/support' \
            --skip-cleanup \
            --skip-package \
            --ubuntu-test-repo ${{ matrix.EXTRA_ARGS }}
          echo "::remove-matcher owner=gcc::"

      - name: Set AppImage Version
        if: matrix.name == 'AppImage'
        run: |
          version=${{ inputs.release_version }}
          echo "VERSION=${version}" >> "${GITHUB_ENV}"

      - name: Package Linux - AppImage
        if: matrix.name == 'AppImage'
        working-directory: build
        run: |
          # Install Sunshine to the DESTDIR
          DESTDIR=AppDir ninja install

          # Custom AppRun file
          cp -f ../packaging/linux/AppImage/AppRun ./AppDir/
          chmod +x ./AppDir/AppRun

          # Variables
          DESKTOP_FILE="${DESKTOP_FILE:-${APP_ID}.desktop}"
          ICON_FILE="${ICON_FILE:-sunshine.png}"

          # Download linuxdeploy for AppImage
          wget -q https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage

          # Install linuxdeploy-plugin-gtk
          wget -q https://raw.githubusercontent.com/linuxdeploy/linuxdeploy-plugin-gtk/master/linuxdeploy-plugin-gtk.sh
          chmod +x linuxdeploy-plugin-gtk.sh
          export DEPLOY_GTK_VERSION=3

          ./linuxdeploy-x86_64.AppImage \
            --appdir ./AppDir \
            --plugin gtk \
            --executable ./sunshine \
            --icon-file "../$ICON_FILE" \
            --desktop-file "./$DESKTOP_FILE" \
            --output appimage

          # Move AppImage to artifacts
          mv Sunshine*.AppImage ../artifacts/sunshine.AppImage
          chmod +x ../artifacts/sunshine.AppImage

      - name: Verify AppImage
        if: matrix.name == 'AppImage'
        run: |
          wget https://github.com/TheAssassin/appimagelint/releases/download/continuous/appimagelint-x86_64.AppImage
          chmod +x appimagelint-x86_64.AppImage
          ./appimagelint-x86_64.AppImage ./artifacts/sunshine.AppImage

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-Linux-${{ matrix.name }}
          path: artifacts/
          if-no-files-found: error
